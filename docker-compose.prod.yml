# docker-compose.prod.yml (SERVER deployment)
services:
  backend:
    container_name: ${COMPOSE_PROJECT_NAME:-mywebapp}_backend
    image: ${IMAGE_TAG_BACKEND}
    restart: unless-stopped
    environment: # loaded from .env file, passed to backend container.
      # Useable in backend/ :
      ## dockerfile
      ## main.rs
      COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME:-mywebapp}
      CONTAINER_NAME: ${COMPOSE_PROJECT_NAME:-mywebapp}_backend

      BACKEND_INTERNAL_PORT: ${BACKEND_INTERNAL_PORT:-8080}
      RUST_LOG: ${RUST_LOG:-info}
      DATABASE_URL: ${DATABASE_URL:-/app/data/mywebapp.db}
    volumes:
      - db_data:/app/data
    expose:
      - "${BACKEND_INTERNAL_PORT:-8080}"
    networks:
      - app-network

  frontend:
    container_name: ${COMPOSE_PROJECT_NAME:-mywebapp}_frontend
    image: ${IMAGE_TAG_FRONTEND}
    restart: always
    ports:
      - "${HOST_PORT_FRONTEND:-8080}:${FRONTEND_INTERNAL_PORT:-91}"
    environment:
      - FRONTEND_INTERNAL_PORT=${FRONTEND_INTERNAL_PORT:-91}
      - BACKEND_INTERNAL_PORT=${BACKEND_INTERNAL_PORT:-8080}
    networks:
      - app-network
    depends_on:
      - backend

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
