# frontend/Dockerfile

# Simple Nginx-based static frontend
FROM nginx:1.25-alpine

# Accept all configuration from docker-compose
ARG FRONTEND_INTERNAL_PORT
ARG BACKEND_INTERNAL_PORT
ARG COMPOSE_PROJECT_NAME
ARG NODE_ENV

# Pass through to container environment
ENV FRONTEND_INTERNAL_PORT=${FRONTEND_INTERNAL_PORT}
ENV BACKEND_INTERNAL_PORT=${BACKEND_INTERNAL_PORT}
ENV COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
ENV NODE_ENV=${NODE_ENV}

# Remove default config
RUN rm /etc/nginx/conf.d/default.conf

# Copy the Nginx config template
COPY nginx.conf /etc/nginx/templates/default.conf.template

# Create directory structure
RUN mkdir -p /usr/share/nginx/html/static

# Copy static HTML files and assets
COPY static/*.html /usr/share/nginx/html/
COPY static/style.css /usr/share/nginx/html/static/
COPY static/monkgroup.png /usr/share/nginx/html/static/

# Health check endpoint for deployment pipeline
RUN echo '{"status":"ok","version":"static-nginx","timestamp":0}' > /usr/share/nginx/html/health && \
    mkdir -p /usr/share/nginx/html/api && \
    ln -sf /usr/share/nginx/html/health /usr/share/nginx/html/api/health

EXPOSE ${FRONTEND_INTERNAL_PORT}

# Start Nginx with environment variable substitution
CMD ["sh", "-c", "envsubst '${FRONTEND_INTERNAL_PORT} ${BACKEND_INTERNAL_PORT}' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"]
