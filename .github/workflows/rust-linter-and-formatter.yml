name: Linter
on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - development
  workflow_dispatch:

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    permissions:
      packages: read
      statuses: write      # To report GitHub Actions status checks
      pull-requests: write # Required for reviewdog reporter
      checks: write        # Required for reviewdog's status checks
      contents: read       # For code checkout
      issues: write        # Needed for PR comments (good to have)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0

      - name: Cache Super-Linter
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/super-linter
            .github/linters
          key: ${{ runner.os }}-super-linter-${{ hashFiles('**/.github/super-linter.env') }}
          restore-keys: |
            ${{ runner.os }}-super-linter-

      - name: Setup reviewdog
        uses: reviewdog/action-setup@e04ffabe3898a0af8d0fb1af00c188831c4b5893 # v1.3.2
        with:
          reviewdog_version: latest

      - name: Run Super-linter
        uses: super-linter/super-linter@v7.3.0
        # Removed id: super-linter as we don't need its stdout/stderr directly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: false
          # --- Use SARIF format ---
          OUTPUT_FORMAT: "sarif"
          LOG_LEVEL: "ERROR"
          # --- Corrected variable name ---
          OUTPUT_DETAILS: "detailed"
          VALIDATE_RUST_2021: true
          VALIDATE_RUST_CLIPPY: true
          VALIDATE_ALL_CODEBASE: true
          GITHUB_COMMENT: false # Let reviewdog handle comments/checks
          CREATE_LOG_FILE: true # Keep this if you want the regular log file too
          # --- Specify SARIF output file name ---
          SARIF_FILE_NAME: "super-linter.sarif" # Default name, but explicit is fine
        continue-on-error: true # Important so reviewdog runs even if linting fails

      # --- Removed Capture linter output step ---

        - name: Run reviewdog
        # Run if the previous step failed (continue-on-error: true) or succeeded
        if: always()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Feed the SARIF file generated by Super-Linter into reviewdog
          # -f=sarif: Input format is SARIF
          # -name: Name of the check run
          # -reporter: How to report results (GitHub Check)
          # -fail-level: Fail the step if errors are found (use 'warning' to fail on warnings too)
          reviewdog -f=sarif \
                    -name="super-linter" \
                    -reporter="github-pr-check" \
                    -fail-level=error \
                    super-linter.sarif # The SARIF file generated by the previous step