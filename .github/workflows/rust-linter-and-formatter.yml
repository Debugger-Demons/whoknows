# .github/workflows/rust-linter.yml

name: Rust Linter

on:
  pull_request:
    branches:
      - development  # Make sure this matches your target branch
  workflow_dispatch:   # Allows manual triggering

jobs:
  lint-rust:
    name: Lint Rust Code
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      checks: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # with:
        #   fetch-depth: 0 # Add if reviewdog diff context needs it

      - name: Cache Cargo Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Run cargo fmt (Check only)
        run: cargo fmt --check
        continue-on-error: true # Allow clippy to run even if fmt fails

      # Run clippy, piping its default output directly into reviewdog's clippy parser
      - name: Run clippy with reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Corrected: Only ONE '--' separator
          cargo clippy --all-targets -- -D warnings \
            | reviewdog -f=clippy \
                -name="clippy" \
                -reporter="github-pr-review" \
                -level="warning" \
                -fail-level="warning"